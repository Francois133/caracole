version: "3"

services:
  db:
    image: postgres
    environment:
      - POSTGRES_USER=${SUPERUSER_USERNAME}
      - POSTGRES_PASSWORD=${SUPERUSER_PASSWORD}
      - POSTGRES_DBNAME
      - POSTGRES_HOST
      - POSTGRES_PORT
      - PGDATA=/pgdata
    volumes:
      - ${VOLUMES}/postgresql:/pgdata

  django_prod: &django_prod
    image: caracole
    build: .
    command: uwsgi --ini /home/caracole/uwsgi.ini
    restart: unless-stopped
    volumes:
      - ./manage.py:/home/caracole/manage.py
      - ./uwsgi.ini:/home/caracole/uwsgi.ini
      - ./caracole:/home/caracole/caracole
      - ./floreal:/home/caracole/floreal
    environment:
      - SUPERUSER_PASSWORD
      - SUPERUSER_USERNAME
      - SUPERUSER_EMAIL
      - POSTGRES_USER=${SUPERUSER_USERNAME}
      - POSTGRES_PASSWORD=${SUPERUSER_PASSWORD}
      - POSTGRES_DBNAME
      - POSTGRES_HOST
      - POSTGRES_PORT
      - DJANGO_SETTINGS_MODULE=caracole.settings
      - DJANGO_SECRET_KEY
      - PUBLIC_HTTP_PORT
      - PUBLIC_HTTPS_PORT
      - PUBLIC_HOST
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_USER
      - SMTP_PASSWORD
    depends_on:
      - db

  dev:
    <<: *django_prod
    command: ./manage.py runserver 0.0.0.0:8000
    restart: "no"
    ports:
      - ${PUBLIC_HTTP_PORT}:8000

  init:
    <<: *django_prod
    command: ./caracole/initialize.sh

  prod:
    image: nginx
    restart: unless-stopped
    ports:
      - ${PUBLIC_HTTP_PORT}:80
      - ${PUBLIC_HTTPS_PORT}:443
    volumes:
      - ./nginx-${PUBLIC_PROTO}.conf:/etc/nginx/conf.d/default.conf
      - ./static:/home/caracole/static
      - ${VOLUMES}/certbot/conf:/etc/letsencrypt
      - ${VOLUMES}/certbot/www:/var/www/certbot
    depends_on:
      - django_prod
    
  # https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ${VOLUMES}/certbot/conf:/etc/letsencrypt
      - ${VOLUMES}/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

